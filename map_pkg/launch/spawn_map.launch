<?xml version="1.0" ?>
<launch>

  <!-- Arguments -->
  
  <arg name="map_env_params_file" default="$(find map_pkg)/config/map_config.yaml" />
  <arg name="gen_map_params_file" default="$(find map_pkg)/config/full_config.yaml" />
  
  <arg name="generate_new_map_config" default="true" />
  
  <arg name="elements_models_path" default="$(find map_pkg)/models" />
  <arg name="gazebo_models_path" default="$(find map_pkg)/worlds" />
  <arg name="victims_activated" default="false" />
   
   
  <node pkg="map_pkg" type="delete_full_config.sh" name="delete_config" output="screen"/>


  <!-- Generate the config file  and load params into param server-->
  <node pkg="map_pkg" type="generate_config_file.py" name="generate_config_file" output="screen">
    <param name="map_env_params_file" value="$(arg map_env_params_file)" />
    <param name="gen_map_params_file" value="$(arg gen_map_params_file)" />
    <param name="generate_new_config" value="$(arg generate_new_map_config)" />
    <param name="victims_activated" value="$(arg victims_activated)" />
  </node>


  <!-- Send Borders -->
  <node pkg="map_pkg" type="send_borders" name="send_borders" output="screen">

  </node>

  <!-- Send Gates -->
  <node pkg="map_pkg" type="send_gates" name="send_gates" output="screen">

  </node>

  <!-- Send Obstacles -->
  <node pkg="map_pkg" type="send_obstacles" name="send_obstacles" output="screen">

  </node>

  <!-- Send Victims (only if activated) -->
  <group if="$(arg victims_activated)">
    <node pkg="map_pkg" type="send_victims" name="send_victims" output="screen">

    </node>

    <!-- Send Timeout Node -->
    <node pkg="map_pkg" type="send_timeout" name="send_timeout" output="screen">

    </node>
  </group>
  
 <!-- spawn in gazebo-->

<node pkg="map_pkg" type="spawn_borders.py"  name="spawn_borders" output="screen" >
<param name="gen_map_params_file" value="$(arg gen_map_params_file)" />
<param name="gazebo_models_path" value="$(arg gazebo_models_path)" />  </node>


<node pkg="map_pkg"
type="spawn_obstacles.py"
name="spawn_obstacles"
output="screen">
<param name="gen_map_params_file" value="$(arg gen_map_params_file)" />
<param name="elements_models_path" value="$(arg elements_models_path)" />
 </node>


<node pkg="map_pkg" type="spawn_gates.py"  name="spawn_gates" output="screen">
    <param name="gen_map_params_file" value="$(arg gen_map_params_file)" />
    <param name="elements_models_path" value="$(arg elements_models_path)" />
 </node>
    
    
  <!-- Create PGM map based on published borders and obstacles NNEDE only for nav2 it generates the
  dynamic_map.yaml and runs the mapserver-->
  <node pkg="map_pkg" type="create_map_pgm.py" name="create_map_pgm" output="screen">
    <rosparam command="load" file="$(arg map_env_params_file)" />
  </node>
    
  

</launch>
