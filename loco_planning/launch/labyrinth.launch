<?xml version="1.0"?>
<launch>

    <!-- Parameters -->
    <arg name="model" default="burger"/>
    <arg name="use_sim_time" default="true"/>
    <arg name="use_gui" default="true"/>
    <arg name="use_rviz" default="true"/>
    <arg name="world_name" default="labyrinth.world"/>
    <arg name="elements_models_path" default="$(find map_pkg)/models"/>
    <arg name="gazebo_models_path" default="$(find map_pkg)/worlds"/>
    <!-- needed for lidar -->
    <arg name="sensors" default="true"/>

    <arg name="start_controller" default="true"/>
    <arg name="debug" default="false"/>

    <!-- Set parameters -->
    <param name="use_sim_time" value="$(arg use_sim_time)"/>

    <arg name="x_pos" default="0.0"/>
    <arg name="y_pos" default="0."/>
    <arg name="yaw_pos" default="0.0"/>

    <arg name="x_pos1" default="1.0"/>
    <arg name="y_pos1" default="0."/>
    <arg name="yaw_pos1" default="0.0"/>


    <!-- to load custom model labyrinth-->
    <env name="GAZEBO_MODEL_PATH" value="$(find map_pkg)/models"/>
    <env name="GAZEBO_RESOURCE_PATH" value="$(find map_pkg)/worlds"/>

    <!--Start  gazebo-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find map_pkg)/worlds/$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="$(arg use_gui)"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

    <!--load recorded map for amcl-->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find map_pkg)/maps/labyrinth.yaml"/>

    <group ns="limo0">
        <arg name="robot_id" value="0"/>


        <!-- Description with per-robot namespace -->
        <include file="$(find limo_description)/launch/upload.launch">
            <arg name="robot_id" default="$(arg robot_id)"/>
            <arg name="sensors" default="$(arg sensors)"/>
        </include>

        <!--spawn
        the limo robot-->
        <node name="spawn_model" pkg="gazebo_ros" type="spawn_model"
              args="-urdf -param robot_description -model limo$(arg robot_id) -x $(arg x_pos) -y $(arg y_pos) -z 0.2 -Y $(arg yaw_pos)"/>

        <!-- TF & joints -->
          <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="rate" value="100"/>
        </node>


        <!--AMCL: publish map -> odom TF -->
        <node pkg="amcl" type="amcl" name="amcl">
             <!-- Fix: remap static_map request to global -->
            <remap from="static_map" to="/static_map"/>
            <param name="odom_frame_id" value="limo$(arg robot_id)/odom"/>
            <param name="base_frame_id" value="limo$(arg robot_id)/base_link"/>
            <param name="global_frame_id" value="map"/>
            <!-- Initial pose for limo0 -->
            <param name="initial_pose_x" value="$(arg x_pos)"/>
            <param name="initial_pose_y" value="$(arg y_pos)"/>
            <param name="initial_pose_a" value="$(arg yaw_pos)"/>
        </node>


        <group if="$(arg start_controller)">
            <node pkg="loco_planning" type="controller.py" name="controller" output="screen"
                  args="--robot_id  $(arg robot_id)  --debug $(arg debug)"/>
        </group>


    </group>



    <!-- PUBLISH OBSTACLES RETRIEVED FROM IMAGE CONTOURS and publish them-->
    <node pkg="map_pkg" type="convert_labyrinth_map.py" name="map_extract_contours_into_obstacles" output="screen"/>

    <!-- RViz (optional) -->
    <node pkg="rviz" type="rviz" name="rviz" if="$(arg use_rviz)" args="-d $(find loco_planning)/rviz/conf_labyrinth.rviz"/>

</launch>
